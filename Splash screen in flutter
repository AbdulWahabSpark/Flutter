class SplashScreen extends StatefulWidget {
  const SplashScreen({super.key});

  @override
  MySplashScreenState createState() => MySplashScreenState();
}
class MySplashScreenState extends State<SplashScreen>
    with SingleTickerProviderStateMixin {
  var _visible = true;

  AnimationController? animationController;
  Animation<double>? animation;

  startTime() async {
    var _duration = const Duration(seconds: 3);
    return  Timer(_duration, navigationPage);
  }
  void navigationPage() {
    Navigator.of(context).pushReplacementNamed(HOME_SCREEN);
  }

  @override
  dispose() {
    animationController?.dispose();
    super.dispose();
  }
  @override
  void initState() {
    super.initState();
    animationController =  AnimationController(
      vsync: this,
      duration:  Duration(seconds: 2),
    );
    animation =
     CurvedAnimation(parent: animationController!, curve: Curves.easeOut);

    animation?.addListener(() => this.setState(() {}));
    animationController?.forward();

    setState(() {
      _visible = !_visible;
    });
    startTime();
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      body: Stack(
        fit: StackFit.expand,
        children: <Widget>[
           Column(
            mainAxisAlignment: MainAxisAlignment.center,
            children: <Widget>[
               Image.asset(
                'assets/images/fav-icon.png',
                width: animation!.value * 250,
                height: animation!.value * 250,
              ),
            ],
          ),
        ],
      ),
    );
  }
}
